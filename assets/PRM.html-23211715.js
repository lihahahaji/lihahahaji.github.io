import{_ as t,o as i,c as s,e as p}from"./app-d1c0f0b2.js";const l="/assets/image-20230920124220667-44f81231.png",o="/assets/image-20230920124236424-d91d3168.png",e="/assets/image-20230920124252277-f19426db.png",r={},n=p('<h1 id="prm" tabindex="-1"><a class="header-anchor" href="#prm" aria-hidden="true">#</a> PRM</h1><p>将规划分为两个阶段</p><ul><li><p>建图阶段 - 将连续空间转换为离散空间</p></li><li><p>查询阶段 - 使用 A* 等算法在离散空间(图)中寻找路径</p></li></ul><p>PRM通过在配置空间中创建一个随机采样的网络（图），来帮助寻找起点和目标点之间的可行路径。</p><p>算法步骤:</p><ol><li><p><strong>初始化</strong>：算法开始时，创建一个空的图，通常是一个包含节点和边的数据结构。这个图用于表示配置空间中的可行路径。</p></li><li><p><strong>随机采样</strong>：在配置空间中随机生成一组采样点，通常是均匀分布的随机点，这些点称为PRM的节点。这些节点代表潜在的路径中的关键点。</p><p><img src="'+l+'" alt="image-20230920124220667"></p></li><li><p><strong>邻域计算,连接验证,碰撞检测</strong>：对于每个节点，进行连接验证。对于每一对节点，检查它们之间是否有一条不与障碍物相交的路径。这通常涉及碰撞检测，以确保路径是合法的。如果两个节点之间的路径是合法的，就在图中添加一条边来连接它们。</p><blockquote><ol><li>对于每一个采样点, 取其邻域范围内(例如直线距离 200 以内)的所有采样点进行连线</li><li>判断这些连线是否合法(是否存在碰撞)</li><li>将合法的连线添加到邻接矩阵中</li></ol></blockquote><p><img src="'+o+'" alt="image-20230920124236424"></p></li><li><p><strong>建立图</strong>：重复连接步骤 3，直到足够多的节点被连接成图。这样，就在配置空间中建立了一个包含节点和边的图，表示了可能的路径网络。</p></li><li><p><strong>路径搜索</strong>：一旦图建立完成，可以使用路径搜索算法（如A*搜索）来找到连接起点和目标点的路径。通常，PRM图的节点和边的信息可以用于指导搜索，提高路径搜索效率。</p><p><img src="'+e+'" alt="image-20230920124252277"></p></li></ol><p>PRM算法的主要优势在于它的随机性和概率性质，使得它能够处理复杂的配置空间和高维度问题。由于它通过离散采样的方式生成路径网络，因此不需要在整个配置空间中进行详尽的搜索，从而减少了计算复杂度。PRM适用于各种机器人和自主系统的路径规划问题，包括无人机、自动驾驶汽车、机械臂等。</p><p>需要注意的是，PRM算法的性能和效果受到采样点数量、连接验证方法和路径搜索算法的选择等因素的影响，因此在具体应用中需要进行参数调整和优化。</p>',8),a=[n];function c(g,_){return i(),s("div",null,a)}const d=t(r,[["render",c],["__file","PRM.html.vue"]]);export{d as default};
