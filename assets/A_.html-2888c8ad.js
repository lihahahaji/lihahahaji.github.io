import{_ as D,r as d,o as h,c as C,a as l,b as n,d as s,w as a,e as E}from"./app-d1c0f0b2.js";const _={},v=l("h1",{id:"a",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#a","aria-hidden":"true"},"#"),n(" A*")],-1),g=l("h2",{id:"算法特点",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#算法特点","aria-hidden":"true"},"#"),n(" 算法特点")],-1),f=l("li",null,[l("p",null,"启发式搜索算法")],-1),A=l("li",null,[l("p",null,"基于 BFS & Dijkstra")],-1),b=l("li",null,[l("p",null,"适用于静态环境中的路径规划")],-1),x={class:"katex"},w={class:"katex-mathml"},k=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span>',1),M=l("h2",{id:"_1-基本概念",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_1-基本概念","aria-hidden":"true"},"#"),n(" 1 基本概念")],-1),N=l("li",null,[l("p",null,"启发式方法:"),l("blockquote",null,[l("p",null,"一种根据经验规则进行发现的方法")])],-1),z={class:"katex"},B={class:"katex-mathml"},L=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span>',1),O=l("p",null,"曼哈顿距离: 只允许上下左右移动的情况",-1),q={class:"katex-block"},S={class:"katex-display"},T={class:"katex"},j={class:"katex-mathml"},I=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span>',1),V=l("p",null,"欧几里得距离: 允许朝任意方向移动",-1),R={class:"katex-block"},H={class:"katex-display"},Y={class:"katex"},G={class:"katex-mathml"},J=E(`<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.2561em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9839em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.9439em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2561em;"><span></span></span></span></span></span></span></span>`,1),U=l("li",null,[l("p",null,"其他: 例如对角距离等")],-1),K=l("h2",{id:"_2-算法实现",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_2-算法实现","aria-hidden":"true"},"#"),n(" 2 算法实现")],-1),P=l("h3",{id:"评价函数",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#评价函数","aria-hidden":"true"},"#"),n(" 评价函数")],-1),Q={class:"katex-block"},W={class:"katex-display"},X={class:"katex"},Z={class:"katex-mathml"},$=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span>',1),ss={class:"katex"},as={class:"katex-mathml"},ns=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span>',1),ls={class:"katex"},ps={class:"katex-mathml"},ts=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.6833em"}}),l("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])],-1),es=l("strong",null,"实际成本",-1),os={class:"katex"},cs={class:"katex-mathml"},rs=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span>',1),is={class:"katex"},Es={class:"katex-mathml"},ys=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.6833em"}}),l("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T")])],-1),ds=l("h3",{id:"算法输入",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#算法输入","aria-hidden":"true"},"#"),n(" 算法输入")],-1),ms=l("p",null,"要具体研究一个算法，首先定义输入结构：",-1),Fs={class:"katex"},us={class:"katex-mathml"},Ds=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.6833em"}}),l("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])],-1),hs={class:"katex"},Cs={class:"katex-mathml"},_s=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),vs={class:"katex"},gs={class:"katex-mathml"},fs=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),As={class:"katex"},bs={class:"katex-mathml"},xs=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span>',1),ws={class:"katex"},ks={class:"katex-mathml"},Ms=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.6444em"}}),l("span",{class:"mord"},"1")])],-1),Ns={class:"katex"},zs={class:"katex-mathml"},Bs=E(`<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.1328em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9072em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span></span></span><span style="top:-2.8672em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1328em;"><span></span></span></span></span></span></span></span>`,1),Ls=l("p",null,"这里首先定义两个集合:",-1),Os=l("ul",null,[l("li",null,"开放列表（OpenList）：已经访问过，但是没有确定最短路径的节点。"),l("li",null,"关闭列表（CloseList）：已经确定了源点到其的最短路径的节点。")],-1),qs=l("h3",{id:"算法流程",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#算法流程","aria-hidden":"true"},"#"),n(" 算法流程")],-1),Ss={class:"katex"},Ts={class:"katex-mathml"},js=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.6833em"}}),l("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])],-1),Is=l("p",null,[n("遍历"),l("strong",null,"开放列表")],-1),Vs={class:"katex"},Rs={class:"katex-mathml"},Hs=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.4306em"}}),l("span",{class:"mord mathnormal"},"n")])],-1),Ys={class:"katex"},Gs={class:"katex-mathml"},Js=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span>',1),Us={class:"katex"},Ks={class:"katex-mathml"},Ps=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span>',1),Qs={class:"katex"},Ws={class:"katex-mathml"},Xs=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.6833em"}}),l("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),Zs={class:"katex"},$s={class:"katex-mathml"},sa=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.6833em"}}),l("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),aa={class:"katex"},na={class:"katex-mathml"},la=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),pa={class:"katex"},ta={class:"katex-mathml"},ea=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),oa=l("code",null,"node.state = close",-1),ca={class:"katex"},ra={class:"katex-mathml"},ia=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),Ea=l("code",null,"node.state = new",-1),ya={class:"katex"},da={class:"katex-mathml"},ma=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),Fa={class:"katex"},ua={class:"katex-mathml"},Da=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.6833em"}}),l("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),ha={class:"katex"},Ca={class:"katex-mathml"},_a=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),va={class:"katex"},ga={class:"katex-mathml"},fa=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),Aa={class:"katex"},ba={class:"katex-mathml"},xa=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),wa={class:"katex"},ka={class:"katex-mathml"},Ma=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),Na=l("code",null,"node.state = open",-1),za={class:"katex"},Ba={class:"katex-mathml"},La=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),Oa={class:"katex"},qa={class:"katex-mathml"},Sa=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.6833em"}}),l("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),Ta={class:"katex"},ja={class:"katex-mathml"},Ia=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),Va={class:"katex"},Ra={class:"katex-mathml"},Ha=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),Ya={class:"katex"},Ga={class:"katex-mathml"},Ja=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),Ua={class:"katex"},Ka={class:"katex-mathml"},Pa=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.6833em"}}),l("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),Qa={class:"katex"},Wa={class:"katex-mathml"},Xa=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),Za={class:"katex"},$a={class:"katex-mathml"},sn=E('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">ce</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span>',1),an={class:"katex"},nn={class:"katex-mathml"},ln=l("span",{class:"katex-html","aria-hidden":"true"},[l("span",{class:"base"},[l("span",{class:"strut",style:{height:"0.6833em"}}),l("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),pn=l("li",null,[l("p",null,"重复步骤「2」直到满足以下条件之一，算法结束："),l("ol",null,[l("li",null,"终点进入了开放（找到了起点到终点的路径）"),l("li",null,"开放列表为空，仍未找到终点（无法找到起点到终点的路径）")])],-1),tn=l("li",null,[l("p",null,"路径回溯：如果在步骤「3」中，存在从终点到起点的路径，则回溯找到最短路径："),l("p",null,"从终点开始，每一个节点都沿着父亲节点移动，直到找到起点。")],-1),en=E(`<h2 id="实例" tabindex="-1"><a class="header-anchor" href="#实例" aria-hidden="true">#</a> 实例</h2><h3 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> 问题描述</h3><p>一个机器人 Rob 在一个 M*M 的地图中想目标点 D 前进,已知起点 S 和目标点 D 的坐标,求 S 到 D 的最短路径.</p><h3 id="输入格式" tabindex="-1"><a class="header-anchor" href="#输入格式" aria-hidden="true">#</a> 输入格式</h3><p>m</p><p>x1 y1</p><p>x2 y2</p><p>m*m 的地图</p><h3 id="输入样例" tabindex="-1"><a class="header-anchor" href="#输入样例" aria-hidden="true">#</a> 输入样例</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#d8dee9ff;">10</span></span>
<span class="line"><span style="color:#d8dee9ff;">0 0</span></span>
<span class="line"><span style="color:#d8dee9ff;">9 9</span></span>
<span class="line"><span style="color:#d8dee9ff;">S*********</span></span>
<span class="line"><span style="color:#d8dee9ff;">**#######*</span></span>
<span class="line"><span style="color:#d8dee9ff;">#*****#**#</span></span>
<span class="line"><span style="color:#d8dee9ff;">*****#****</span></span>
<span class="line"><span style="color:#d8dee9ff;">#***#*****</span></span>
<span class="line"><span style="color:#d8dee9ff;">**********</span></span>
<span class="line"><span style="color:#d8dee9ff;">#*#**#****</span></span>
<span class="line"><span style="color:#d8dee9ff;">**********</span></span>
<span class="line"><span style="color:#d8dee9ff;">*****#****</span></span>
<span class="line"><span style="color:#d8dee9ff;">*********D</span></span>
<span class="line"><span style="color:#d8dee9ff;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>回溯路径之后，将路径上点的坐标，在图上输出出来，显示路径。</p><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">iostream</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">vector</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">list</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">queue</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">stack</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">map</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">unordered_map</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">set</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">unordered_set</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">algorithm</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">cstdio</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">cmath</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">string</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">cstring</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">complex</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">include</span><span style="color:#5E81AC;"> </span><span style="color:#ECEFF4;">&lt;</span><span style="color:#A3BE8C;">iterator</span><span style="color:#ECEFF4;">&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">using</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">namespace</span><span style="color:#D8DEE9FF;"> std</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">define</span><span style="color:#5E81AC;"> </span><span style="color:#88C0D0;">INF</span><span style="color:#5E81AC;"> 0x3f3f3f3f</span></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> m</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">string </span><span style="color:#D8DEE9;">mp</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">20</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">directions</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">4</span><span style="color:#ECEFF4;">][</span><span style="color:#B48EAD;">2</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">{</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">},</span><span style="color:#616E88;"> // 上</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">{</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">},</span><span style="color:#616E88;">	 // 下</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">{</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">},</span><span style="color:#616E88;"> // 左</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">{</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">}</span><span style="color:#616E88;">	 // 右</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">struct</span><span style="color:#D8DEE9FF;"> Node</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">	// 定义构造函数</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">Node</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">Node</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">y</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">x</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> x</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">y</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> y</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">index</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;"> m </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> y</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">father</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> x</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> y</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> index</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> father</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">Node </span><span style="color:#D8DEE9;">node</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">200</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">Node s</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> e</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 定义评价函数</span></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">f</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">200</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">g</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">200</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">h</span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">200</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 定义开放列表和关闭列表</span></span>
<span class="line"><span style="color:#D8DEE9FF;">set</span><span style="color:#81A1C1;">&lt;int&gt;</span><span style="color:#D8DEE9FF;"> OpenList</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">set</span><span style="color:#81A1C1;">&lt;int&gt;</span><span style="color:#D8DEE9FF;"> CloseList</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 下标转为坐标</span></span>
<span class="line"><span style="color:#D8DEE9FF;">pair</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">indexToCoordinates</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> index </span><span style="color:#81A1C1;">/</span><span style="color:#D8DEE9FF;"> m</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> y </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> index </span><span style="color:#81A1C1;">%</span><span style="color:#D8DEE9FF;"> m</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">pair</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">&gt;(</span><span style="color:#D8DEE9FF;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> y</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 坐标转为下标</span></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">CoordinatesToindex</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">y</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;"> m </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> y</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 计算两个点之间的曼哈顿距离</span></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">manhattanDistance</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">point1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">point2</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	pair</span><span style="color:#81A1C1;">&lt;int</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">int&gt;</span><span style="color:#D8DEE9FF;"> p1 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">indexToCoordinates</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">point1</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	pair</span><span style="color:#81A1C1;">&lt;int</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">int&gt;</span><span style="color:#D8DEE9FF;"> p2 </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">indexToCoordinates</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">point2</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">abs</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p1</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">first</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">p2</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">first</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">abs</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p1</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">second</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">p2</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">second</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 判断节点是否可达</span></span>
<span class="line"><span style="color:#81A1C1;">bool</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">isValidNode</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">y</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">x </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">||</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">&gt;=</span><span style="color:#D8DEE9FF;"> m </span><span style="color:#81A1C1;">||</span><span style="color:#D8DEE9FF;"> y </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">||</span><span style="color:#D8DEE9FF;"> y </span><span style="color:#81A1C1;">&gt;=</span><span style="color:#D8DEE9FF;"> m</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">false;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">mp</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">x</span><span style="color:#ECEFF4;">][</span><span style="color:#D8DEE9FF;">y</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">#</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">false;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">true;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 输出开放列表中的元素</span></span>
<span class="line"><span style="color:#81A1C1;">void</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">print_OpenList</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	cout </span><span style="color:#81A1C1;">&lt;&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">OpenList: </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">set</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">&gt;::</span><span style="color:#D8DEE9FF;">iterator i </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">begin</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">!=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">end</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		cout </span><span style="color:#81A1C1;">&lt;&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">i </span><span style="color:#81A1C1;">&lt;&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	cout </span><span style="color:#81A1C1;">&lt;&lt;</span><span style="color:#D8DEE9FF;"> endl</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">void</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">A_star</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">	// 将起点 S 放入开放列表</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">insert</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	// 当开放列表不为空</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">while</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">size</span><span style="color:#ECEFF4;">())</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">		// print_OpenList();</span></span>
<span class="line"><span style="color:#616E88;">		// 终点进入开放列表，找到路径，算法结束。</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">find</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">e</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">!=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">end</span><span style="color:#ECEFF4;">())</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">return;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">		// 遍历开放列表，找到评价函数 f 的值最小的节点</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> min_f </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> INF</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> n_ind </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">set</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">&gt;::</span><span style="color:#D8DEE9FF;">iterator i </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">begin</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">!=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">end</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">f</span><span style="color:#ECEFF4;">[</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> min_f</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				min_f </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">f</span><span style="color:#ECEFF4;">[</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				n_ind </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">i</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">		// 找到当前需要处理的节点 N 的下标 n_ind</span></span>
<span class="line"><span style="color:#616E88;">		// 遍历节点 N 的邻接节点(上下左右)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		pair</span><span style="color:#81A1C1;">&lt;int</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">int&gt;</span><span style="color:#D8DEE9FF;"> n_coord </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">indexToCoordinates</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n_ind</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">4</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> n_near_x </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">n_coord</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">first</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">directions</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">][</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> n_near_y </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">n_coord</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">second</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">directions</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">][</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> n_near_ind </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">CoordinatesToindex</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n_near_x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> n_near_y</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">!</span><span style="color:#88C0D0;">isValidNode</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n_near_x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> n_near_y</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">||</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">CloseList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">find</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">!=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">CloseList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">end</span><span style="color:#ECEFF4;">())</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">				// 当前节点不可达 或者 已经在关闭列表中</span></span>
<span class="line"><span style="color:#616E88;">				// 忽略</span></span>
<span class="line"><span style="color:#616E88;">				// cout&lt;&lt;n_near_ind&lt;&lt;endl;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">else</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">find</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">end</span><span style="color:#ECEFF4;">())</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">				// 不在开放列表中（未被访问过），则将其加入开放列表</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				</span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">insert</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">				// 计算评估函数</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				</span><span style="color:#D8DEE9;">g</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">g</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_ind</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				</span><span style="color:#D8DEE9;">f</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">g</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_ind</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">manhattanDistance</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">e</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">				// 将 n 设为 n_near 的父结点</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				</span><span style="color:#D8DEE9;">node</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">].</span><span style="color:#D8DEE9;">father</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> n_ind</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">else</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">				// 已经在开放列表中，更新 f</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				</span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">g</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">g</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_ind</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">					// 如果有更优的路径</span></span>
<span class="line"><span style="color:#D8DEE9FF;">					</span><span style="color:#D8DEE9;">g</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">g</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_ind</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">					// 更新 f 的值</span></span>
<span class="line"><span style="color:#D8DEE9FF;">					</span><span style="color:#D8DEE9;">f</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">g</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">manhattanDistance</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">e</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">					// 将 n 设为 n_near 的父结点</span></span>
<span class="line"><span style="color:#D8DEE9FF;">					</span><span style="color:#D8DEE9;">node</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_near_ind</span><span style="color:#ECEFF4;">].</span><span style="color:#D8DEE9;">father</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> n_ind</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#616E88;">		// 节点 n 已经处理完毕，移动到关闭列表。</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">erase</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n_ind</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#D8DEE9;">CloseList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">insert</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n_ind</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">void</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">init</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	cin </span><span style="color:#81A1C1;">&gt;&gt;</span><span style="color:#D8DEE9FF;"> m</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> y</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">	// 输入起点和终点的坐标</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	cin </span><span style="color:#81A1C1;">&gt;&gt;</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">&gt;&gt;</span><span style="color:#D8DEE9FF;"> y</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	s </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">Node</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> y</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	cin </span><span style="color:#81A1C1;">&gt;&gt;</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">&gt;&gt;</span><span style="color:#D8DEE9FF;"> y</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	e </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">Node</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> y</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">	// 输入地图数据</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> m</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		cin </span><span style="color:#81A1C1;">&gt;&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">mp</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">memset</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">f</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> INF</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">sizeof</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">f</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">memset</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">g</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> INF</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">sizeof</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">g</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">memset</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">h</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> INF</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">sizeof</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">h</span><span style="color:#ECEFF4;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#D8DEE9;">f</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">manhattanDistance</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">e</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#D8DEE9;">g</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#D8DEE9;">h</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">]</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">manhattanDistance</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">e</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">index</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> m</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#D8DEE9;">node</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">].</span><span style="color:#D8DEE9;">index</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> i</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#D8DEE9;">node</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">].</span><span style="color:#D8DEE9;">x</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">indexToCoordinates</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">).</span><span style="color:#D8DEE9;">first</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#D8DEE9;">node</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">].</span><span style="color:#D8DEE9;">y</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">indexToCoordinates</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">).</span><span style="color:#D8DEE9;">second</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#D8DEE9;">node</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">].</span><span style="color:#D8DEE9;">father</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">void</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">solve</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">init</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">A_star</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	// 输出访问过的节点</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> m</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> j </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> j </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> m</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> j</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">CloseList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">find</span><span style="color:#ECEFF4;">(</span><span style="color:#88C0D0;">CoordinatesToindex</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> j</span><span style="color:#ECEFF4;">))</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">CloseList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">end</span><span style="color:#ECEFF4;">())</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				cout </span><span style="color:#81A1C1;">&lt;&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">mp</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">][</span><span style="color:#D8DEE9FF;">j</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">else</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				cout </span><span style="color:#81A1C1;">&lt;&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">A</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		cout </span><span style="color:#81A1C1;">&lt;&lt;</span><span style="color:#D8DEE9FF;"> endl</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	// 输出最短路径</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	set</span><span style="color:#81A1C1;">&lt;int&gt;</span><span style="color:#D8DEE9FF;"> path</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> p </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">99</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">while</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">p </span><span style="color:#81A1C1;">!=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#D8DEE9;">path</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">insert</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">p</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		p </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">node</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">p</span><span style="color:#ECEFF4;">].</span><span style="color:#D8DEE9;">father</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> m</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> j </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> j </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> m</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> j</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">path</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">find</span><span style="color:#ECEFF4;">(</span><span style="color:#88C0D0;">CoordinatesToindex</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> j</span><span style="color:#ECEFF4;">))</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">path</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">end</span><span style="color:#ECEFF4;">())</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				cout </span><span style="color:#81A1C1;">&lt;&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">mp</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">][</span><span style="color:#D8DEE9FF;">j</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">else</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				cout </span><span style="color:#81A1C1;">&lt;&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">%</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		cout </span><span style="color:#81A1C1;">&lt;&lt;</span><span style="color:#D8DEE9FF;"> endl</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">main</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	ios</span><span style="color:#ECEFF4;">::</span><span style="color:#88C0D0;">sync_with_stdio</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#D8DEE9;">cin</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">tie</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#ifndef</span><span style="color:#5E81AC;"> </span><span style="color:#88C0D0;">ONLINE_JUDGE</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">freopen</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/Applications/CppRunner.app/Contents/Resources/cpp/input.txt</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">r</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> stdin</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#5E81AC;font-weight:bold;">#</span><span style="color:#81A1C1;">endif</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">solve</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#d8dee9ff;">被访问过的节点:</span></span>
<span class="line"><span style="color:#d8dee9ff;">A A A A A A A A A A </span></span>
<span class="line"><span style="color:#d8dee9ff;">A A # # # # # # # A </span></span>
<span class="line"><span style="color:#d8dee9ff;"># A A A A A # * * # </span></span>
<span class="line"><span style="color:#d8dee9ff;">* A A A A # * * * * </span></span>
<span class="line"><span style="color:#d8dee9ff;"># A A A # * * * * * </span></span>
<span class="line"><span style="color:#d8dee9ff;">* A A A A A A A A A </span></span>
<span class="line"><span style="color:#d8dee9ff;"># A # A A # A A A A </span></span>
<span class="line"><span style="color:#d8dee9ff;">* A A A A A A A A A </span></span>
<span class="line"><span style="color:#d8dee9ff;">* A A A A # A A A A </span></span>
<span class="line"><span style="color:#d8dee9ff;">* * * * * * * * * D </span></span>
<span class="line"><span style="color:#d8dee9ff;"></span></span>
<span class="line"><span style="color:#d8dee9ff;">最短路径:</span></span>
<span class="line"><span style="color:#d8dee9ff;">S % * * * * * * * * </span></span>
<span class="line"><span style="color:#d8dee9ff;">* % # # # # # # # * </span></span>
<span class="line"><span style="color:#d8dee9ff;"># % % % * * # * * # </span></span>
<span class="line"><span style="color:#d8dee9ff;">* * * % * # * * * * </span></span>
<span class="line"><span style="color:#d8dee9ff;"># * * % # * * * * * </span></span>
<span class="line"><span style="color:#d8dee9ff;">* * * % % % % % % % </span></span>
<span class="line"><span style="color:#d8dee9ff;"># * # * * # * * * % </span></span>
<span class="line"><span style="color:#d8dee9ff;">* * * * * * * * * % </span></span>
<span class="line"><span style="color:#d8dee9ff;">* * * * * # * * * % </span></span>
<span class="line"><span style="color:#d8dee9ff;">* * * * * * * * * % </span></span>
<span class="line"><span style="color:#d8dee9ff;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function on(cn,rn){const p=d("mi"),t=d("mo"),e=d("mrow"),o=d("annotation"),c=d("semantics"),r=d("math"),y=d("mn"),i=d("msub"),F=d("msup"),u=d("msqrt"),m=d("mtext");return h(),C("div",null,[v,g,l("ul",null,[f,A,b,l("li",null,[l("p",null,[n("求解源点到目标点之间的最短路径，需要指明目标点（即目标点位置已知，这样才能有效的计算"),l("span",x,[l("span",w,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("h")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(p,null,{default:a(()=>[n("x")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("h(x)")]),_:1})]),_:1})]),_:1})]),k]),n("）。")])])]),M,l("ul",null,[N,l("li",null,[l("p",null,[n("启发函数 "),l("span",z,[l("span",B,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("h")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(p,null,{default:a(()=>[n("x")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("h(x)")]),_:1})]),_:1})]),_:1})]),L]),n(":")]),l("blockquote",null,[l("ol",null,[l("li",null,[O,l("p",q,[l("span",S,[l("span",T,[l("span",j,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("D")]),_:1}),s(t,null,{default:a(()=>[n("=")]),_:1}),s(p,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("x")]),_:1}),s(y,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(t,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("x")]),_:1}),s(y,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(p,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(t,null,{default:a(()=>[n("+")]),_:1}),s(p,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("y")]),_:1}),s(y,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(t,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("y")]),_:1}),s(y,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(p,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n(" D= |x_1-x_2| + |y_1-y_2| ")]),_:1})]),_:1})]),_:1})]),I])])])]),l("li",null,[V,l("p",R,[l("span",H,[l("span",Y,[l("span",G,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("D")]),_:1}),s(t,null,{default:a(()=>[n("=")]),_:1}),s(u,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("x")]),_:1}),s(y,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(t,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("x")]),_:1}),s(y,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(F,null,{default:a(()=>[s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(y,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(t,null,{default:a(()=>[n("+")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("y")]),_:1}),s(y,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(t,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("y")]),_:1}),s(y,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(F,null,{default:a(()=>[s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(y,null,{default:a(()=>[n("2")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n(" D=\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2} ")]),_:1})]),_:1})]),_:1})]),J])])])]),U])])])]),K,P,l("p",Q,[l("span",W,[l("span",X,[l("span",Z,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("f")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(p,null,{default:a(()=>[n("n")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(t,null,{default:a(()=>[n("=")]),_:1}),s(p,null,{default:a(()=>[n("g")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(p,null,{default:a(()=>[n("n")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(t,null,{default:a(()=>[n("+")]),_:1}),s(p,null,{default:a(()=>[n("h")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(p,null,{default:a(()=>[n("n")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n(" f(n)=g(n)+h(n) ")]),_:1})]),_:1})]),_:1})]),$])])]),l("ul",null,[l("li",null,[l("span",ss,[l("span",as,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("g")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(p,null,{default:a(()=>[n("n")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("g(n)")]),_:1})]),_:1})]),_:1})]),ns]),n(" 表示从起点 "),l("span",ls,[l("span",ps,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("S")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("S")]),_:1})]),_:1})]),_:1})]),ts]),n(" 到的最优路径的"),es,n(", 即从起点到当前节点已经走过的路程。（其实可以理解为 Dijkstra 算法中的 dis 数组）")]),l("li",null,[l("span",os,[l("span",cs,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("h")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(p,null,{default:a(()=>[n("n")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("h(n)")]),_:1})]),_:1})]),_:1})]),rs]),n(" 表示从当前节点到目标节点 "),l("span",is,[l("span",Es,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("T")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("T")]),_:1})]),_:1})]),_:1})]),ys]),n(" 的预估成本, 使用启发函数来计算, 根据具体问题, 一般为曼哈顿距离或者欧氏距离")])]),ds,ms,l("ul",null,[l("li",null,[n("起点 "),l("span",Fs,[l("span",us,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("S")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("S")]),_:1})]),_:1})]),_:1})]),Ds]),n(" 坐标已知 "),l("span",hs,[l("span",Cs,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("x")]),_:1}),s(y,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(t,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("y")]),_:1}),s(y,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("(x_1,y_1)")]),_:1})]),_:1})]),_:1})]),_s]),n("，终点 E 坐标已知 "),l("span",vs,[l("span",gs,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("x")]),_:1}),s(y,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(t,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("y")]),_:1}),s(y,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("(x_2,y_2)")]),_:1})]),_:1})]),_:1})]),fs]),n("。")]),l("li",null,[n("输入地图为一个 "),l("span",As,[l("span",bs,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(t,null,{default:a(()=>[n("∗")]),_:1}),s(p,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N*N")]),_:1})]),_:1})]),_:1})]),xs]),n(" 的方阵，其中每个元素代表一个实际地图的像素，假设每一个相邻像素之间的距离为 "),l("span",ws,[l("span",ks,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(y,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1})]),Ms]),n("，斜对角相邻元素的距离为 "),l("span",Ns,[l("span",zs,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(u,null,{default:a(()=>[s(y,null,{default:a(()=>[n("2")]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\sqrt{2}")]),_:1})]),_:1})]),_:1})]),Bs]),n(" ，其中有一些像素为障碍物。")])]),Ls,Os,qs,l("ol",null,[l("li",null,[l("p",null,[n("将起点 "),l("span",Ss,[l("span",Ts,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("S")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("S")]),_:1})]),_:1})]),_:1})]),js]),n(" 放入开放列表 (openList) 中.")])]),l("li",null,[Is,l("ol",null,[l("li",null,[l("p",null,[n("计算列表中的每一个节点 "),l("span",Vs,[l("span",Rs,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1})]),Hs]),n(" 的评价函数"),l("span",Ys,[l("span",Gs,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("f")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(p,null,{default:a(()=>[n("n")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("f(n)")]),_:1})]),_:1})]),_:1})]),Js]),n(" , 查找"),l("span",Us,[l("span",Ks,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("f")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(p,null,{default:a(()=>[n("n")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("f(n)")]),_:1})]),_:1})]),_:1})]),Ps]),n(" 函数值最小的节点, 将这个节点作为当前要处理的节点"),l("span",Qs,[l("span",Ws,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),Xs])])]),l("li",null,[l("p",null,[n("对于当前正在处理的节点 "),l("span",Zs,[l("span",$s,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),sa]),n(" , 遍历与之相邻的其他所有节点 "),l("span",aa,[l("span",na,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),la])]),l("ul",null,[l("li",null,[n("假设当前正在处理的相邻节点为 "),l("span",pa,[l("span",ta,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),ea]),l("ol",null,[l("li",null,[l("p",null,[oa,n(": "),l("span",ca,[l("span",ra,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),ia]),n(" 已经在关闭列表中（已经确定最短路径），或者不可达（障碍物），则忽略该节点")])]),l("li",null,[l("p",null,[Ea,n(": "),l("span",ya,[l("span",da,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),ma]),n(" 不在开放列表中（未被访问过），则将其加入开放列表，将当前节点 "),l("span",Fa,[l("span",ua,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),Da]),n(" 设置为 "),l("span",ha,[l("span",Ca,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),_a]),n(" 的父结点，计算节点 "),l("span",va,[l("span",ga,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),fa]),n(" 的评价函数 "),l("span",Aa,[l("span",ba,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("f")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("f(N_{near})")]),_:1})]),_:1})]),_:1})]),xa]),n(" ,"),l("span",wa,[l("span",ka,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("g")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("g(N_{near})")]),_:1})]),_:1})]),_:1})]),Ma])])]),l("li",null,[l("p",null,[Na,n(),l("span",za,[l("span",Ba,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),La]),n(" 已经在开放列表中（已经访问过但未确定最短路径），则需要检查这条路径（节点 "),l("span",Oa,[l("span",qa,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),Sa]),n(" 到节点 "),l("span",Ta,[l("span",ja,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),Ia]),n(" 的路径）是否更好，参考指标为 "),l("span",Va,[l("span",Ra,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("g")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("g(N_{near})")]),_:1})]),_:1})]),_:1})]),Ha]),n(" ,若"),l("span",Ya,[l("span",Ga,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("g")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("g(N_{near})")]),_:1})]),_:1})]),_:1})]),Ja]),n(" 更小，则说明该路径更好，则将它的父亲节点（设为节点）设置为当前节点 "),l("span",Ua,[l("span",Ka,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),Pa]),n(" ，并重新计算"),l("span",Qa,[l("span",Wa,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("f")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("f(N_{near})")]),_:1})]),_:1})]),_:1})]),Xa]),n(" 。")]),l("blockquote",null,[l("p",null,[l("span",Za,[l("span",$a,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("g")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(t,null,{default:a(()=>[n("=")]),_:1}),s(p,null,{default:a(()=>[n("m")]),_:1}),s(p,null,{default:a(()=>[n("i")]),_:1}),s(p,null,{default:a(()=>[n("n")]),_:1}),s(e,null,{default:a(()=>[s(t,{fence:"true"},{default:a(()=>[n("{")]),_:1}),s(m,null,{default:a(()=>[n(" ")]),_:1}),s(p,null,{default:a(()=>[n("g")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(p,null,{default:a(()=>[n("N")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(t,null,{default:a(()=>[n("+")]),_:1}),s(p,null,{default:a(()=>[n("d")]),_:1}),s(p,null,{default:a(()=>[n("i")]),_:1}),s(p,null,{default:a(()=>[n("s")]),_:1}),s(p,null,{default:a(()=>[n("t")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("c")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(p,null,{default:a(()=>[n("N")]),_:1}),s(t,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(m,null,{default:a(()=>[n(" ")]),_:1}),s(t,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(m,null,{default:a(()=>[n(" ")]),_:1}),s(p,null,{default:a(()=>[n("g")]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("e")]),_:1}),s(p,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(t,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(m,null,{default:a(()=>[n(" ")]),_:1}),s(t,{fence:"true"},{default:a(()=>[n("}")]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("g(N_{near}) = min\\left\\{\\ g(N)+distace(N,N_{near})\\ ,\\ g(N_{near}) \\ \\right\\}")]),_:1})]),_:1})]),_:1})]),sn])])])])])])])]),l("li",null,[l("p",null,[n("当前节点 "),l("span",an,[l("span",nn,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(p,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),ln]),n(" 处理完毕， 移动到关闭列表，表示该节点已经不需要被继续关注。")])])])]),pn,tn]),en])}const yn=D(_,[["render",on],["__file","A_.html.vue"]]);export{yn as default};
