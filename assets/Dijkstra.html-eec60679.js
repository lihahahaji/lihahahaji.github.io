import{_ as E,r as d,o as y,c as _,a as t,b as n,d as s,w as a,e as i}from"./app-d1c0f0b2.js";const F={},g=i('<h1 id="dijkstra" tabindex="-1"><a class="header-anchor" href="#dijkstra" aria-hidden="true">#</a> Dijkstra</h1><h2 id="算法特点" tabindex="-1"><a class="header-anchor" href="#算法特点" aria-hidden="true">#</a> 算法特点</h2><ul><li>求解单源最短路问题</li><li>可以求解从源点到图上其他所有点的距离，不需要有特定的目标点</li><li>要求图中不存在负权边</li></ul><h2 id="算法实现" tabindex="-1"><a class="header-anchor" href="#算法实现" aria-hidden="true">#</a> 算法实现</h2><p>首先我们做两个定义：</p>',5),D=t("code",null,"dis[i]",-1),f=t("code",null,"dis[0]=0",-1),v=t("code",null,"dis",-1),C={class:"katex"},x={class:"katex-mathml"},b=t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.4306em"}}),t("span",{class:"mord"},"∞")])],-1),A=t("li",null,[t("p",null,"定义两个集合:"),t("ul",null,[t("li",null,"开放列表（OpenList）：已经访问过，但是没有确定最短路径的节点。"),t("li",null,"关闭列表（CloseList）：已经访问过，并且已经确定了源点到其的最短路径的节点。")])],-1),N=t("h3",{id:"算法流程",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#算法流程","aria-hidden":"true"},"#"),n(" 算法流程")],-1),w={class:"katex"},k={class:"katex-mathml"},M=t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.6833em"}}),t("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])],-1),z=t("p",null,[n("遍历"),t("strong",null,"开放列表")],-1),L={class:"katex"},B={class:"katex-mathml"},P=t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.4306em"}}),t("span",{class:"mord mathnormal"},"n")])],-1),j={class:"katex"},O={class:"katex-mathml"},S=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span>',1),V={class:"katex"},I={class:"katex-mathml"},q=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span>',1),G={class:"katex"},H={class:"katex-mathml"},T=t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.6833em"}}),t("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),J={class:"katex"},K={class:"katex-mathml"},Q=t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.6833em"}}),t("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),R={class:"katex"},U={class:"katex-mathml"},W=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),X={class:"katex"},Y={class:"katex-mathml"},Z=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),$=t("code",null,"node.state = close",-1),ss={class:"katex"},as={class:"katex-mathml"},ns=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),ls=t("code",null,"node.state = new",-1),ts={class:"katex"},ps={class:"katex-mathml"},es=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),os={class:"katex"},rs={class:"katex-mathml"},cs=t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.6833em"}}),t("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),is={class:"katex"},ms={class:"katex-mathml"},ds=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),us={class:"katex"},hs={class:"katex-mathml"},Es=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),ys={class:"katex"},_s={class:"katex-mathml"},Fs=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mord mathnormal">ce</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),gs=t("code",null,"node.state = open",-1),Ds={class:"katex"},fs={class:"katex-mathml"},vs=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),Cs={class:"katex"},xs={class:"katex-mathml"},bs=t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.6833em"}}),t("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),As={class:"katex"},Ns={class:"katex-mathml"},ws=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),ks={class:"katex"},Ms={class:"katex-mathml"},zs=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),Ls={class:"katex"},Bs={class:"katex-mathml"},Ps=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),js={class:"katex"},Os={class:"katex-mathml"},Ss=t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.6833em"}}),t("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),Vs={class:"katex"},Is={class:"katex-mathml"},qs=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),Gs={class:"katex"},Hs={class:"katex-mathml"},Ts=i('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mspace"> </span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">ce</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span>',1),Js={class:"katex"},Ks={class:"katex-mathml"},Qs=t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.6833em"}}),t("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])],-1),Rs=t("li",null,[t("p",null,"重复步骤「2」直到满足以下条件之一，算法结束："),t("ol",null,[t("li",null,"开放列表为空（已经没有可以访问的点）")])],-1),Us=t("li",null,[t("p",null,"路径回溯：从终点开始，每一个节点都沿着父亲节点移动，直到找到起点，即可得到一条路径。")],-1),Ws=i(`<h3 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h3><p>根据算法的特性，我们可以知道，OpenList 是一个集合，CloseList 是一个栈（用集合也可以）。</p><p>C++ 代码实现如下：</p><h4 id="节点数据结构" tabindex="-1"><a class="header-anchor" href="#节点数据结构" aria-hidden="true">#</a> 节点数据结构</h4><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#616E88;">// 定义节点的结构</span></span>
<span class="line"><span style="color:#81A1C1;">struct</span><span style="color:#D8DEE9FF;"> Node</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">    // 当前节点的状态</span></span>
<span class="line"><span style="color:#616E88;">    // 0 - new</span></span>
<span class="line"><span style="color:#616E88;">    // 1 - open</span></span>
<span class="line"><span style="color:#616E88;">    // -1 - close</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> state</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">    // 当前节点的坐标值</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> x</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> y</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">    // 当前节点的 h 值（也就是 dijkstra 中的 dis ）</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">double</span><span style="color:#D8DEE9FF;"> h</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">    // 当前节点的 k 值</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">double</span><span style="color:#D8DEE9FF;"> k</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">    // 当前节点指向的父节点</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> father</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">    // 当前节点的下标</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> index</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="核心代码" tabindex="-1"><a class="header-anchor" href="#核心代码" aria-hidden="true">#</a> 核心代码</h4><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#616E88;">// 使用 dijkstra 规划最短路径</span></span>
<span class="line"><span style="color:#81A1C1;">void</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">dijkstra</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">e</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">    // 将起点 S 放入开放列表</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">insert</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9;">node</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">s</span><span style="color:#ECEFF4;">])</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">node</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">s</span><span style="color:#ECEFF4;">].</span><span style="color:#D8DEE9;">state</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">while</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">size</span><span style="color:#ECEFF4;">())</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">        // 遍历 OpenList，找到 h 值最小的节点 n</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> min_h_value </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> INF</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">        // 找到当前正在处理的节点的指针</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        Node </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">N_ptr</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">set</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#D8DEE9FF;">Node </span><span style="color:#81A1C1;">*</span><span style="color:#ECEFF4;">&gt;::</span><span style="color:#D8DEE9FF;">iterator i </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">begin</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">!=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">end</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            Node </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">nodePtr </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">i</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">nodePtr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">h</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> min_h_value</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                min_h_value </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">nodePtr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">h</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                N_ptr </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> nodePtr</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">        // 遍历 N 的邻接节点</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">8</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> i</span><span style="color:#81A1C1;">++</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">            // 先判断当前节点是否存在（合法）</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> n_near_x </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">N_ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">x</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">directions</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">][</span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">int</span><span style="color:#D8DEE9FF;"> n_near_y </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">N_ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">y</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">directions</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">i</span><span style="color:#ECEFF4;">][</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">!</span><span style="color:#88C0D0;">isValidNode</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">n_near_x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> n_near_y</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#81A1C1;">continue;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">            Node </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">N_near_Ptr </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9;">node</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">n_near_x </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;"> n </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> n_near_y</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">            // 当前节点的状态为 new（没有访问过）</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">N_near_Ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">state</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">                // 加入开放列表</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">insert</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">N_near_Ptr</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#D8DEE9;">N_near_Ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">state</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">                // 更新 h 值</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#D8DEE9;">N_near_Ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">h</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">N_ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">h</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">i </span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">3</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">?</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1.4</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">                // 将 n 设置为 n_near 的父结点</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#D8DEE9;">N_near_Ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">father</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">N_ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">index</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#616E88;">            // 当前节点的状态为 open（已经访问过但是还没有确定最短路径）</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">else</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">N_near_Ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">state</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#81A1C1;">double</span><span style="color:#D8DEE9FF;"> new_h </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">N_ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">h</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">i </span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">3</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">?</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1.4</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">N_near_Ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">h</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> new_h</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                    </span><span style="color:#D8DEE9;">N_near_Ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">h</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> new_h</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                    </span><span style="color:#D8DEE9;">N_near_Ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">father</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">N_ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">index</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#616E88;">            // 当前节点处理完毕，移入CloseList</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#D8DEE9;">N_ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">state</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#D8DEE9;">OpenList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">erase</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">N_ptr</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#D8DEE9;">CloseList</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">insert</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">N_ptr</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">            // 终点进入 CloseList 算法结束</span></span>
<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">N_ptr</span><span style="color:#ECEFF4;">-&gt;</span><span style="color:#D8DEE9;">index</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> e</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">                </span><span style="color:#81A1C1;">return;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="完整代码" tabindex="-1"><a class="header-anchor" href="#完整代码" aria-hidden="true">#</a> 完整代码</h4>`,8),Xs={href:"https://github.com/lihahahaji/A-Star/blob/main/Dijkstra.cpp",target:"_blank",rel:"noopener noreferrer"};function Ys(Zs,$s){const l=d("mi"),p=d("mrow"),o=d("annotation"),r=d("semantics"),c=d("math"),e=d("mo"),m=d("msub"),u=d("mtext"),h=d("ExternalLinkIcon");return y(),_("div",null,[g,t("ul",null,[t("li",null,[t("p",null,[n("维护一个 dis 数组，"),D,n(" 表示节点 i 到源点的最短距离，初始状态下，"),f,n("，其他节点的 "),v,n(" 值都为 "),t("span",C,[t("span",x,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,{mathvariant:"normal"},{default:a(()=>[n("∞")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\infin")]),_:1})]),_:1})]),_:1})]),b])])]),A]),N,t("ol",null,[t("li",null,[t("p",null,[n("将起点 "),t("span",w,[t("span",k,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("S")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("S")]),_:1})]),_:1})]),_:1})]),M]),n(" 放入开放列表 (openList) 中.")])]),t("li",null,[z,t("ol",null,[t("li",null,[t("p",null,[n("计算列表中的每一个节点 "),t("span",L,[t("span",B,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1})]),P]),n(" 的"),t("span",j,[t("span",O,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("s")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("dis(n)")]),_:1})]),_:1})]),_:1})]),S]),n(" , 查找"),t("span",V,[t("span",I,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("s")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("dis(n)")]),_:1})]),_:1})]),_:1})]),q]),n(" 值最小的节点, 将这个节点作为当前要处理的节点"),t("span",G,[t("span",H,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),T])])]),t("li",null,[t("p",null,[n("对于当前正在处理的节点 "),t("span",J,[t("span",K,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),Q]),n(" , 遍历与之相邻的其他所有节点 "),t("span",R,[t("span",U,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),W])]),t("ul",null,[t("li",null,[t("p",null,[n("假设当前正在处理的相邻节点为 "),t("span",X,[t("span",Y,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),Z])]),t("ol",null,[t("li",null,[t("p",null,[$,n(),t("span",ss,[t("span",as,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),ns]),n(" 已经在关闭列表中（已经确定最短路径），或者不可达（障碍物），则忽略该节点")])]),t("li",null,[t("p",null,[ls,n(),t("span",ts,[t("span",ps,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),es]),n(" 不在开放列表中（未被访问过），则将其加入开放列表，将当前节点 "),t("span",os,[t("span",rs,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),cs]),n(" 设置为 "),t("span",is,[t("span",ms,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),ds]),n(" 的父结点，计算节点 "),t("span",us,[t("span",hs,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),Es]),n(" 的 "),t("span",ys,[t("span",_s,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("s")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(e,null,{default:a(()=>[n("=")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("s")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(e,null,{default:a(()=>[n("+")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("s")]),_:1}),s(l,null,{default:a(()=>[n("t")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("c")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(e,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("dis(N_{near}) = dis(N)+distance(N,N_{near})")]),_:1})]),_:1})]),_:1})]),Fs])])]),t("li",null,[t("p",null,[gs,n(),t("span",Ds,[t("span",fs,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),vs]),n(" 已经在开放列表中（已经访问过但未确定最短路径），则需要检查这条路径（节点 "),t("span",Cs,[t("span",xs,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),bs]),n(" 到节点 "),t("span",As,[t("span",Ns,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N_{near}")]),_:1})]),_:1})]),_:1})]),ws]),n(" 的路径）是否更好，参考指标为 "),t("span",ks,[t("span",Ms,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("g")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("g(N_{near})")]),_:1})]),_:1})]),_:1})]),zs]),n(" ,若"),t("span",Ls,[t("span",Bs,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("g")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("g(N_{near})")]),_:1})]),_:1})]),_:1})]),Ps]),n(" 更小，则说明该路径更好，则将它的父亲节点（设为节点）设置为当前节点 "),t("span",js,[t("span",Os,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),Ss]),n(" ，并重新计算"),t("span",Vs,[t("span",Is,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("f")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("f(N_{near})")]),_:1})]),_:1})]),_:1})]),qs]),n(" 。")]),t("blockquote",null,[t("p",null,[t("span",Gs,[t("span",Hs,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("s")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(e,null,{default:a(()=>[n("=")]),_:1}),s(l,null,{default:a(()=>[n("m")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[s(e,{fence:"true"},{default:a(()=>[n("{")]),_:1}),s(u,null,{default:a(()=>[n(" ")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("s")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(e,null,{default:a(()=>[n("+")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("s")]),_:1}),s(l,null,{default:a(()=>[n("t")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("c")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(e,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(u,null,{default:a(()=>[n(" ")]),_:1}),s(e,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(u,null,{default:a(()=>[n(" ")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("s")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(m,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1})]),_:1})]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(u,null,{default:a(()=>[n(" ")]),_:1}),s(e,{fence:"true"},{default:a(()=>[n("}")]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("dis(N_{near}) = min\\left\\{\\ dis(N)+distace(N,N_{near})\\ ,\\ dis(N_{near}) \\ \\right\\}")]),_:1})]),_:1})]),_:1})]),Ts])])])])])])])]),t("li",null,[t("p",null,[n("当前节点 "),t("span",Js,[t("span",Ks,[s(c,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(r,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("N")]),_:1})]),_:1})]),_:1})]),Qs]),n(" 处理完毕， 移动到关闭列表，表示该节点已经不需要被继续关注。")])])])]),Rs,Us]),Ws,t("p",null,[t("a",Xs,[n("GitHub 仓库"),s(h)])])])}const aa=E(F,[["render",Ys],["__file","Dijkstra.html.vue"]]);export{aa as default};
